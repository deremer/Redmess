REDMESS
Redis Pub/Sub-esque implementation with persistence
A message queue for Redis in Node.js that mimics pub/sub functionality but uses Redis lists to enable persistence. Designed to support multiple node processes that can listen to each other to perform different tasks.

To get started...

1. Clone the repo
2. npm install redis
3. npm install filter
4. Execute test applications in /tests/ (set redis config first)


Set up a publisher...

var aPublisher = new redmess.Publisher('pub_name', config);
aPublisher.publish('channel', message);


Set up a subscriber...

var aSubscriber = new redmess.Subscriber('sub_name', 'channel', config);
aSubscriber.on('message', function (data) {
  //
  // Process message here
  //

  aSubscriber.next();
});

// Start listening
aSubscriber.start();

